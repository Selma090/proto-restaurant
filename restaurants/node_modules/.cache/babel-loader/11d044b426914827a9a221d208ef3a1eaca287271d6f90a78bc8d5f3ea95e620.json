{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salma\\\\Documents\\\\Frontend\\\\restaurants\\\\src\\\\DeliveryAvailability.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RestaurantCard from './RestaurantCard'; // Créez ce composant pour afficher les détails du restaurant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryAvailability = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState('');\n  const [restaurants, setRestaurants] = useState([]);\n\n  // Fonction pour gérer la soumission du formulaire d'emplacement utilisateur\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Appel à votre backend pour récupérer les restaurants disponibles en fonction de l'emplacement de l'utilisateur\n    fetch(`your-backend-url/api/restaurants?location=${userLocation}`).then(response => response.json()).then(data => setRestaurants(data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Entrez votre emplacement\",\n        value: userLocation,\n        onChange: e => setUserLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"V\\xE9rifier la disponibilit\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        restaurant: restaurant\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DeliveryAvailability, \"ieWSP6IqoWigg3O6C2ex13vrErI=\");\n_c = DeliveryAvailability;\nexport default DeliveryAvailability;\nvar _c;\n$RefreshReg$(_c, \"DeliveryAvailability\");","map":{"version":3,"names":["React","useState","RestaurantCard","jsxDEV","_jsxDEV","DeliveryAvailability","_s","userLocation","setUserLocation","restaurants","setRestaurants","handleSubmit","e","preventDefault","fetch","then","response","json","data","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","id","_c","$RefreshReg$"],"sources":["C:/Users/salma/Documents/Frontend/restaurants/src/DeliveryAvailability.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RestaurantCard from './RestaurantCard'; // Créez ce composant pour afficher les détails du restaurant\r\n\r\nconst DeliveryAvailability = () => {\r\n  const [userLocation, setUserLocation] = useState('');\r\n  const [restaurants, setRestaurants] = useState([]);\r\n\r\n  // Fonction pour gérer la soumission du formulaire d'emplacement utilisateur\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Appel à votre backend pour récupérer les restaurants disponibles en fonction de l'emplacement de l'utilisateur\r\n    fetch(`your-backend-url/api/restaurants?location=${userLocation}`)\r\n      .then(response => response.json())\r\n      .then(data => setRestaurants(data));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Entrez votre emplacement\"\r\n          value={userLocation}\r\n          onChange={(e) => setUserLocation(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Vérifier la disponibilité</button>\r\n      </form>\r\n      <div>\r\n        {restaurants.map(restaurant => (\r\n          <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryAvailability;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,KAAK,CAAE,6CAA4CP,YAAa,EAAC,CAAC,CAC/DQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,cAAc,CAACQ,IAAI,CAAC,CAAC;EACvC,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAMgB,QAAQ,EAAET,YAAa;MAAAQ,QAAA,gBAC3Bf,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,0BAA0B;QACtCC,KAAK,EAAEhB,YAAa;QACpBiB,QAAQ,EAAGZ,CAAC,IAAKJ,eAAe,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACFzB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAyB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACPzB,OAAA;MAAAe,QAAA,EACGV,WAAW,CAACqB,GAAG,CAACC,UAAU,iBACzB3B,OAAA,CAACF,cAAc;QAAqB6B,UAAU,EAAEA;MAAW,GAAtCA,UAAU,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAvB,EAAA,CA/BKD,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AAiC1B,eAAeA,oBAAoB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}