{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salma\\\\Documents\\\\Frontend\\\\restaurants\\\\src\\\\BusinessInsights.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BusinessInsights() {\n  _s();\n  const [restaurantData, setRestaurantData] = useState([]);\n  useEffect(() => {\n    // Fetch restaurant data from the API\n    fetch('/api/restaurantData').then(response => response.json()).then(data => setRestaurantData(data)).catch(error => console.error('Error fetching restaurant data:', error));\n  }, []);\n\n  // Function to calculate distribution of restaurant types\n  const calculateRestaurantTypeDistribution = () => {\n    const typeCount = {};\n    restaurantData.forEach(restaurant => {\n      typeCount[restaurant.cuisineType] = (typeCount[restaurant.cuisineType] || 0) + 1;\n    });\n    return Object.entries(typeCount).map(([type, count]) => ({\n      name: type,\n      value: count\n    }));\n  };\n\n  // Data for the pie chart\n  const data = calculateRestaurantTypeDistribution();\n\n  // Colors for the pie chart\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Business Information Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: data,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 80,\n            fill: \"#8884d8\",\n            label: true,\n            children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(BusinessInsights, \"JxczaU7OEEVZ3YAd+UX/Axe//oc=\");\n_c = BusinessInsights;\nexport default BusinessInsights;\nvar _c;\n$RefreshReg$(_c, \"BusinessInsights\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","ResponsiveContainer","Legend","jsxDEV","_jsxDEV","BusinessInsights","_s","restaurantData","setRestaurantData","fetch","then","response","json","data","catch","error","console","calculateRestaurantTypeDistribution","typeCount","forEach","restaurant","cuisineType","Object","entries","map","type","count","name","value","COLORS","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","entry","index","length","_c","$RefreshReg$"],"sources":["C:/Users/salma/Documents/Frontend/restaurants/src/BusinessInsights.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\r\n\r\nfunction BusinessInsights() {\r\n  const [restaurantData, setRestaurantData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch restaurant data from the API\r\n    fetch('/api/restaurantData')\r\n      .then(response => response.json())\r\n      .then(data => setRestaurantData(data))\r\n      .catch(error => console.error('Error fetching restaurant data:', error));\r\n  }, []);\r\n\r\n  // Function to calculate distribution of restaurant types\r\n  const calculateRestaurantTypeDistribution = () => {\r\n    const typeCount = {};\r\n    restaurantData.forEach(restaurant => {\r\n      typeCount[restaurant.cuisineType] = (typeCount[restaurant.cuisineType] || 0) + 1;\r\n    });\r\n    return Object.entries(typeCount).map(([type, count]) => ({ name: type, value: count }));\r\n  };\r\n\r\n  // Data for the pie chart\r\n  const data = calculateRestaurantTypeDistribution();\r\n\r\n  // Colors for the pie chart\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF'];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Business Information Dashboard</h2>\r\n      {/* Display table of restaurant data */}\r\n      {/* <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Restaurant Name</th>\r\n            <th>Cuisine Type</th>\r\n            <th>Address</th>\r\n            <th>Phone Number</th>\r\n            <th>Email</th>\r\n            <th>Opening Hours</th>\r\n            <th>Delivery Areas</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {restaurantData.map(restaurant => (\r\n            <tr key={restaurant.id}>\r\n              <td>{restaurant.restaurantName}</td>\r\n              <td>{restaurant.cuisineType}</td>\r\n              <td>{restaurant.address}</td>\r\n              <td>{restaurant.phoneNumber}</td>\r\n              <td>{restaurant.email}</td>\r\n              <td>{restaurant.openingHours}</td>\r\n              <td>{restaurant.deliveryAreas}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> */}\r\n      \r\n      {/* Display pie chart of restaurant type distribution */}\r\n      <div style={{ width: '100%', height: 300 }}>\r\n        <ResponsiveContainer>\r\n          <PieChart>\r\n            <Pie\r\n              data={data}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              label\r\n            >\r\n              {data.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n              ))}\r\n            </Pie>\r\n            <Legend />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusinessInsights;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}